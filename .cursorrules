# Cursor Rules for DeepSpaceSaga Project

## Code Style and Comments
- All code comments must be written in English
- All XML documentation comments must be written in English
- User interface text and messages can be in Russian as per user requirements
- Code variable names, method names, and class names should follow C# naming conventions

## Using Statements
- All usings should be in file GlobalUsings.cs in root of every project
- All local usings should be deleted

## Memory Bank
- When user asks to "read all rules" or "прочти все правила", always first search for and read the .ai-instructions.md file in the project before responding with the rules summary

## .NET Development Rules
- Follow .NET and ASP.NET Core conventions and best practices
- Use object-oriented and functional programming patterns as appropriate
- Prefer LINQ and lambda expressions for collection operations
- Use descriptive variable and method names
- Structure files according to .NET conventions (Controllers, Models, Services, etc.)

## Naming Conventions
- Use PascalCase for class names, method names, and public members
- Use camelCase for local variables and private fields
- Use UPPERCASE for constants
- Prefix interface names with "I" (e.g., 'IUserService')

## Error Handling and Validation
- Use exceptions for exceptional cases, not for control flow
- Implement proper error logging
- Use Data Annotations or Fluent Validation for model validation
- Return appropriate HTTP status codes and consistent error responses

## API Design
- Follow RESTful API design principles
- Use attribute routing in controllers
- Implement versioning for your API
- Use action filters for cross-cutting concerns

## Performance Optimization
- Use asynchronous programming with async/await for I/O-bound operations
- Implement caching strategies
- Use efficient LINQ queries and avoid N+1 query problems
- Implement pagination for large data sets

## Security
- Use Authentication and Authorization middleware
- Implement JWT authentication for stateless API authentication
- Use HTTPS and enforce SSL
- Implement proper CORS policies

## Testing
- Write unit tests using xUnit, NUnit, or MSTest
- Use Moq or NSubstitute for mocking dependencies
- Implement integration tests for API endpoints
